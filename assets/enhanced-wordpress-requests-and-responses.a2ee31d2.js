import{y as s,a as n,o as e,b as a,g as t}from"./vendor.6c96340a.js";const o={class:"markdown-body"},p=[a("h1",{id:"enhanced-wordpress-rest-requests-and-responses",tabindex:"-1"},[t("Enhanced WordPress REST Requests and Responses "),a("a",{class:"header-anchor",href:"#enhanced-wordpress-rest-requests-and-responses"},[a("span",{class:"sr-only"},"Jump to heading"),a("span",{"aria-hidden":"true"},"#")])],-1),a("div",{class:"text-lead"},[a("p",null,"How to extend WordPress Request and Response objects.")],-1),a("p",null,[a("img",{src:"/img/wp-rest-api.png",alt:"Enhanced WordPress REST Requests and Responses"})],-1),a("p",null,[t("Firstly let’s discuss what we want from our "),a("code",null,"Request"),t(" and "),a("code",null,"Response"),t(" objects.")],-1),a("h2",{id:"request",tabindex:"-1"},[t("Request "),a("a",{class:"header-anchor",href:"#request"},[a("span",{class:"sr-only"},"Jump to heading"),a("span",{"aria-hidden":"true"},"#")])],-1),a("ul",null,[a("li",null,[t("Ways to interact with the request inputs: "),a("code",null,"get"),t(", "),a("code",null,"boolean"),t(", "),a("code",null,"has")]),a("li",null,"The ability to validate the request")],-1),a("pre",{class:"language-php"},[a("code",{class:"language-php"},[a("span",{class:"token php language-php"},[a("span",{class:"token delimiter important"},"<?php"),t("\n\n"),a("span",{class:"token variable"},"$request"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token keyword"},"new"),t(),a("span",{class:"token class-name"},"Request"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),t("\n\n"),a("span",{class:"token variable"},"$request"),a("span",{class:"token operator"},"->"),a("span",{class:"token function"},"get"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string single-quoted-string"},"'email'"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),t("\n"),a("span",{class:"token variable"},"$request"),a("span",{class:"token operator"},"->"),a("span",{class:"token function"},"boolean"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string single-quoted-string"},"'remember'"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),t("\n"),a("span",{class:"token variable"},"$request"),a("span",{class:"token operator"},"->"),a("span",{class:"token function"},"has"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string single-quoted-string"},"'password'"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),t("\n\n"),a("span",{class:"token variable"},"$request"),a("span",{class:"token operator"},"->"),a("span",{class:"token function"},"hasHeader"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string single-quoted-string"},"'content-type'"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),t("\n")])])],-1),a("h2",{id:"response",tabindex:"-1"},[t("Response "),a("a",{class:"header-anchor",href:"#response"},[a("span",{class:"sr-only"},"Jump to heading"),a("span",{"aria-hidden":"true"},"#")])],-1),a("ul",null,[a("li",null,"A simple way to return content, status codes and headers"),a("li",null,"The ability to automatically convert content to the desired format")],-1),a("pre",{class:"language-php"},[a("code",{class:"language-php"},[a("span",{class:"token php language-php"},[a("span",{class:"token delimiter important"},"<?php"),t("\n\n"),a("span",{class:"token variable"},"$response"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token keyword"},"new"),t(),a("span",{class:"token class-name"},"Response"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string single-quoted-string"},"'Unauthorized.'"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),t("\n\n"),a("span",{class:"token variable"},"$response"),a("span",{class:"token operator"},"->"),a("span",{class:"token function"},"setStatus"),a("span",{class:"token punctuation"},"("),a("span",{class:"token number"},"403"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),t("\n\n"),a("span",{class:"token keyword"},"return"),t(),a("span",{class:"token variable"},"$response"),a("span",{class:"token punctuation"},";"),t("\n")])])],-1),a("p",null,"I cannot stand WordPress’ coding standards, in particular snake-cased methods and properties. We’ll make some nicer methods to wrap default behaviour.",-1),a("pre",{class:"language-php"},[a("code",{class:"language-php"},[a("span",{class:"token php language-php"},[a("span",{class:"token delimiter important"},"<?php"),t("\n\n"),a("span",{class:"token keyword"},"class"),t(),a("span",{class:"token class-name-definition class-name"},"Request"),t(),a("span",{class:"token keyword"},"extends"),t(),a("span",{class:"token class-name"},"WP_REST_Request"),t("\n"),a("span",{class:"token punctuation"},"{"),t("\n    "),a("span",{class:"token comment"},"/**\n     * Get all inputs\n     *\n     * @return array\n     */"),t("\n    "),a("span",{class:"token keyword"},"public"),t(),a("span",{class:"token keyword"},"function"),t(),a("span",{class:"token function-definition function"},"all"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t("\n    "),a("span",{class:"token punctuation"},"{"),t("\n        "),a("span",{class:"token keyword"},"return"),t(),a("span",{class:"token variable"},"$this"),a("span",{class:"token operator"},"->"),a("span",{class:"token function"},"get_params"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),t("\n    "),a("span",{class:"token punctuation"},"}"),t("\n\n"),a("span",{class:"token punctuation"},"}"),t("\n\n")])])],-1),a("pre",{class:"language-php"},[a("code",{class:"language-php"},[a("span",{class:"token php language-php"},[a("span",{class:"token delimiter important"},"<?php"),t("\n\n"),a("span",{class:"token keyword"},"class"),t(),a("span",{class:"token class-name-definition class-name"},"Response"),t(),a("span",{class:"token keyword"},"extends"),t(),a("span",{class:"token class-name"},"WP_REST_Response"),t("\n"),a("span",{class:"token punctuation"},"{"),t("\n\n"),a("span",{class:"token punctuation"},"}"),t("\n\n")])])],-1)],l={setup(a,{expose:t}){t({frontmatter:{name:"Enhanced WordPress REST Requests and Responses",title:"Enhanced WordPress REST Requests and Responses // Ben Rutland Web",description:"How to extend WordPress Request and Response objects",thumbnail:"/img/wp-rest-api.png",tags:["php","wordpress"],layout:"post",meta:[{property:"og:title",content:"Enhanced WordPress REST Requests and Responses // Ben Rutland Web"},{property:"og:description",content:"How to extend WordPress Request and Response objects"},{name:"description",content:"How to extend WordPress Request and Response objects"}]}});return s({title:"Enhanced WordPress REST Requests and Responses // Ben Rutland Web",meta:[{property:"og:title",content:"Enhanced WordPress REST Requests and Responses // Ben Rutland Web"},{property:"og:description",content:"How to extend WordPress Request and Response objects"},{name:"description",content:"How to extend WordPress Request and Response objects"}]}),(s,a)=>(e(),n("div",o,p))}};export{l as default};
