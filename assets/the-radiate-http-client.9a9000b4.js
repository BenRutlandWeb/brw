import{k as s,c as a,o as t,l as p}from"./index.9e6845b0.js";var e="/img/radiate-http-client.png";const o={class:"markdown-body"},c=p('<h1 id="the-radiate-http-client" tabindex="-1">The Radiate HTTP client <a class="header-anchor" href="#the-radiate-http-client"><span class="sr-only">Jump to heading</span><span aria-hidden="true">#</span></a></h1><div class="text-lead"><p>Make API calls from your application with the Radiate <code>Http</code> facade.</p></div><p><img src="'+e+`" alt="Radiate HTTP client code"></p><p>The Radiate HTTP client is an elegant wrapper around <code>wp_remote_request</code>, with useful methods to build the HTTP request, and returning a fluent response interface.</p><pre class="language-php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">use</span> <span class="token package">Radiate<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>Facades<span class="token punctuation">\\</span>Http</span><span class="token punctuation">;</span>

<span class="token variable">$client</span> <span class="token operator">=</span> <span class="token class-name static-context">Http</span><span class="token operator">::</span><span class="token function">baseUrl</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;https://api.example.com&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">asJson</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">acceptJson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$client</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$response</span><span class="token operator">-&gt;</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$users</span> <span class="token operator">=</span> <span class="token variable">$response</span><span class="token operator">-&gt;</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</span></code></pre><h2 id="concurrent-requests" tabindex="-1">Concurrent requests <a class="header-anchor" href="#concurrent-requests"><span class="sr-only">Jump to heading</span><span aria-hidden="true">#</span></a></h2><p>Like Laravel, you can make concurrent requests which will run at the same time. Think of concurrent requests as asyncronous.</p><pre class="language-php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">use</span> <span class="token package">Radiate<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Client<span class="token punctuation">\\</span>Pool</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Radiate<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>Facades<span class="token punctuation">\\</span>Http</span><span class="token punctuation">;</span>

<span class="token variable">$responses</span> <span class="token operator">=</span> <span class="token class-name static-context">Http</span><span class="token operator">::</span><span class="token function">pool</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name type-declaration">Pool</span> <span class="token variable">$pool</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$pool</span><span class="token operator">-&gt;</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;first&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;https://api.example.com/first&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token variable">$pool</span><span class="token operator">-&gt;</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;second&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;https://api.example.com/second&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token variable">$pool</span><span class="token operator">-&gt;</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;third&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;https://api.example.com/third&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">return</span> <span class="token punctuation">[</span>
    <span class="token variable">$responses</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;first&#39;</span><span class="token punctuation">]</span><span class="token operator">-&gt;</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token variable">$responses</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;second&#39;</span><span class="token punctuation">]</span><span class="token operator">-&gt;</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token variable">$responses</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;third&#39;</span><span class="token punctuation">]</span><span class="token operator">-&gt;</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

</span></code></pre>`,8),l=[c],h="The Radiate HTTP client",m="The Radiate HTTP client // Ben Rutland Web",T=null,f="/img/radiate-http-client.png",b=["radiate","wordpress","php","http"],R="post",v=[{property:"og:title",content:"The Radiate HTTP client // Ben Rutland Web"}],H={__name:"the-radiate-http-client",setup(i,{expose:n}){return n({frontmatter:{name:"The Radiate HTTP client",title:"The Radiate HTTP client // Ben Rutland Web",description:null,thumbnail:"/img/radiate-http-client.png",tags:["radiate","wordpress","php","http"],layout:"post",meta:[{property:"og:title",content:"The Radiate HTTP client // Ben Rutland Web"}]}}),s({title:"The Radiate HTTP client // Ben Rutland Web",meta:[{property:"og:title",content:"The Radiate HTTP client // Ben Rutland Web"}]}),(k,d)=>(t(),a("div",o,l))}};export{H as default,T as description,R as layout,v as meta,h as name,b as tags,f as thumbnail,m as title};
